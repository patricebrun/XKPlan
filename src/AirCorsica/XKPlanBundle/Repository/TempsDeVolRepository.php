<?php

namespace AirCorsica\XKPlanBundle\Repository;

use AirCorsica\XKPlanBundle\Entity\Aeroport;
use AirCorsica\XKPlanBundle\Entity\TypeAvion;

/**
 * TempsDeVolRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TempsDeVolRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Retourne la liste des temps vols en fondtion d'une ligne, une saison et un avion
     *
     * @param Aeroport $aeroportDepart
     * @param Aeroport $aeroportArrivee
     * @param TypeAvion $typeAvion
     * @param \DateTime $dateDebut
     * @param \DateTime $dateFin
     * @return null si pas de ligne ou pas de saison trouvÃ© sinon un tableau de TempsDeVol
     */
    public function findTdvForVol(Aeroport $aeroportDepart, Aeroport $aeroportArrivee, TypeAvion $typeAvion, \DateTime $dateDebut, \DateTime $dateFin){

        $ligne = $this->getEntityManager()->getRepository('AirCorsicaXKPlanBundle:Ligne')->findLigneExistante($aeroportDepart, $aeroportArrivee);
        if($ligne === null){
            return null;
        }
        $saison = $this->getEntityManager()->getRepository("AirCorsicaXKPlanBundle:PeriodeSaison")->findPeriodesaisonByDate($dateDebut->format('d-m-Y'),$dateFin->format('d-m-Y'));
        if($saison === null){
            return null;
        }

        $qb = $this->createQueryBuilder('tdv');

        $qb->join('tdv.typeAvion','ta');
        $qb->where('ta.id = :typeAvion');
        $qb->setParameter('typeAvion',$typeAvion);

        $qb->join('tdv.ligne','l');
        $qb->andwhere('l.id = :ligne');
        $qb->setParameter('ligne',$ligne);

        $qb->join('tdv.saison','s');
        $qb->andwhere('s.id = :saison');
        $qb->setParameter('saison',$saison);

        $query = $qb->getQuery();
        $result = $query->getOneOrNullResult();

        return $result;
    }
}
